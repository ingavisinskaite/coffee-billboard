{"version":3,"sources":["components/delete-coffee-dialog/delete-coffee-dialog.jsx","services/coffee-form-validation.js","components/edit-coffee-dialog/edit-coffee-dialog.jsx","config/config.js","redux/actions.js","components/coffee-card/coffee-card.jsx","components/add-coffee-dialog/add-coffee-dialog.jsx","components/loading-spinner/loading-spinner.jsx","components/billboard/billboard.jsx","components/header/header.jsx","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["DeleteCoffeeDialog","props","Dialog","open","isOpen","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","coffeeTitle","DialogActions","Button","onClick","color","e","deleteCard","coffeeId","autoFocus","isCoffeeFormValid","values","length","EditCoffeeDialog","React","useState","coffeeImg","imgUrl","setImgUrl","title","setTitle","coffeePrice","price","setPrice","isValid","setIsValid","editedCoffee","useEffect","TextField","margin","label","type","fullWidth","value","onChange","target","InputProps","endAdornment","InputAdornment","position","inputProps","step","Number","variant","editCard","disabled","config","apiUrl","REQUEST_COFFEE_LIST","RECEIVE_COFFEE_LIST","ADD_COFFEE","ADD_COFFEE_SUCCESS","REMOVE_COFFEE","REMOVE_COFFEE_SUCCESS","EDIT_COFFEE","EDIT_COFFEE_SUCCESS","postCoffee","coffeePayload","dispatch","coffee","addCoffee","fetch","method","headers","body","JSON","stringify","then","response","json","addCoffeeSuccess","newCoffee","deleteCoffee","removeCoffee","removeCoffeeSuccess","putCoffee","editCoffee","editCoffeeSuccess","fetchCoffeeList","coffeeList","receiveCoffeeList","CoffeeCard","openEdit","setOpenEdit","openDelete","setOpenDelete","useDispatch","handleCloseEdit","handleCloseDelete","Card","className","CardMedia","image","style","background","backgroundSize","backgroundPosition","CardActions","Tooltip","aria-label","CardContent","Typography","component","toFixed","AddCoffeeDialog","newCoffeeImg","setNewCoffeeImg","newCoffeeTitle","setNewCoffeeTitle","newCoffeePrice","setNewCoffeePrice","name","url","required","min","addNewCoffee","LoadingSpinner","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","connect","state","setOpen","isLoading","Grid","container","map","c","index","item","md","sm","xs","key","console","log","Fab","href","src","alt","App","Boolean","window","location","hostname","match","initialState","updateCoffeeById","coffeeIndex","findIndex","combineReducers","action","filter","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.387079df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst DeleteCoffeeDialog = props => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Delete coffee</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure want to delete {props.coffeeTitle} from your billboard?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={e => props.deleteCard(props.coffeeId)} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCoffeeDialog;\r\n","export const isCoffeeFormValid = (values) => {\r\n    if (values[0].length > 0 && values[1].length > 0 && values[2] > 0) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\r\n\r\nconst EditCoffeeDialog = props => {\r\n  const inputProps = {\r\n    step: 0.1\r\n  };\r\n\r\n  const [imgUrl, setImgUrl] = React.useState(props.coffeeImg);\r\n  const [title, setTitle] = React.useState(props.coffeeTitle);\r\n  const [price, setPrice] = React.useState(props.coffeePrice);\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const editedCoffee = {\r\n    imgUrl,\r\n    title,\r\n    price\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isCoffeeFormValid([imgUrl, title, price])) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }, [imgUrl, title, price]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Edit coffee</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"Image Url\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={imgUrl}\r\n          onChange={e => setImgUrl(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Price\"\r\n          type=\"number\"\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\r\n          }}\r\n          inputProps={inputProps}\r\n          fullWidth\r\n          value={price}\r\n          onChange={e => setPrice(Number(e.target.value))}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\" variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => props.editCard(editedCoffee, props.coffeeId)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disabled={!isValid}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditCoffeeDialog;\r\n","export const config = {\r\n    apiUrl: 'https://arcane-scrubland-42634.herokuapp.com'\r\n}","import { config } from '../config/config';\r\n\r\nexport const REQUEST_COFFEE_LIST = 'GET_COFFEE_LIST';\r\nexport const RECEIVE_COFFEE_LIST = 'RECEIVE_COFFEE_LIST'\r\nexport const ADD_COFFEE = 'ADD_COFFEE';\r\nexport const ADD_COFFEE_SUCCESS = 'ADD_COFFEE_SUCCESS';\r\nexport const REMOVE_COFFEE = 'REMOVE_COFFEE';\r\nexport const REMOVE_COFFEE_SUCCESS = 'REMOVE_COFFEE_SUCCESS';\r\nexport const EDIT_COFFEE = 'EDIT_COFFEE';\r\nexport const EDIT_COFFEE_SUCCESS = 'EDIT COFFEE SUCCESS';\r\n\r\nexport function addCoffee(coffeePayload) {\r\n    return {\r\n        type: ADD_COFFEE,\r\n        coffee: coffeePayload\r\n    }\r\n}\r\n\r\nexport function addCoffeeSuccess(coffeePayload) {\r\n    return {\r\n        type: ADD_COFFEE_SUCCESS,\r\n        coffee: coffeePayload\r\n    }\r\n}\r\n\r\nexport function postCoffee(coffeePayload) {\r\n    return function (dispatch) {\r\n        dispatch(addCoffee())\r\n\r\n        return fetch(`${config.apiUrl}/coffee`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    imgUrl: coffeePayload.imgUrl,\r\n                    title: coffeePayload.title,\r\n                    price: coffeePayload.price\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(addCoffeeSuccess(json.newCoffee));\r\n            })\r\n    }\r\n}\r\n\r\nexport function removeCoffee(coffeeId) {\r\n    return {\r\n        type: REMOVE_COFFEE,\r\n        coffeeId\r\n    }\r\n}\r\n\r\nexport function removeCoffeeSuccess(coffeeId) {\r\n    return {\r\n        type: REMOVE_COFFEE_SUCCESS,\r\n        coffeeId\r\n    }\r\n}\r\n\r\nexport function deleteCoffee(coffeeId) {\r\n    return function (dispatch) {\r\n        dispatch(removeCoffee())\r\n\r\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(response => {\r\n                dispatch(removeCoffeeSuccess(coffeeId))\r\n            })\r\n    }\r\n}\r\n\r\nexport function editCoffee(editedCoffee, coffeeId) {\r\n    return {\r\n        type: EDIT_COFFEE,\r\n        coffee: editedCoffee,\r\n        coffeeId\r\n    }\r\n}\r\n\r\nexport function editCoffeeSuccess(editedCoffee, coffeeId) {\r\n    return {\r\n        type: EDIT_COFFEE_SUCCESS,\r\n        coffee: editedCoffee,\r\n        coffeeId\r\n    }\r\n}\r\n\r\nexport function putCoffee(editedCoffee, coffeeId) {\r\n    return function (dispatch) {\r\n        dispatch(editCoffee())\r\n\r\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    imgUrl: editedCoffee.imgUrl,\r\n                    title: editedCoffee.title,\r\n                    price: editedCoffee.price\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(editCoffeeSuccess(json.editedCoffee, coffeeId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function requestCoffeeList() {\r\n    return {\r\n        type: REQUEST_COFFEE_LIST\r\n    }\r\n}\r\n\r\nexport function receiveCoffeeList(json) {\r\n    return {\r\n        type: RECEIVE_COFFEE_LIST,\r\n        coffeeList: json\r\n    }\r\n}\r\n\r\nexport function fetchCoffeeList() {\r\n    return function (dispatch) {\r\n        dispatch(requestCoffeeList())\r\n\r\n        return fetch(`${config.apiUrl}/coffee`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveCoffeeList(json.coffeeList))\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport \"./coffee-card.scss\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DeleteCoffeeDialog from \"../delete-coffee-dialog/delete-coffee-dialog\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EditCoffeeDialog from \"../edit-coffee-dialog/edit-coffee-dialog\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteCoffee, putCoffee } from \"../../redux/actions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst CoffeeCard = props => {\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [openDelete, setOpenDelete] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  const editCard = (coffee, id) => {\r\n    dispatch(putCoffee(coffee, id));\r\n    handleCloseEdit();\r\n  };\r\n\r\n  const handleClickOpenDelete = () => {\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const deleteCard = id => {\r\n    dispatch(deleteCoffee(id));\r\n    handleCloseDelete();\r\n  };\r\n\r\n  const formatPrice = price => {\r\n    let formattedPrice = `${price.toFixed(2)}€`;\r\n    return formattedPrice;\r\n  };\r\n\r\n  return (\r\n    <Card className=\"coffee-card\">\r\n      <CardMedia\r\n        className=\"coffee-img\"\r\n        image={props.imgUrl}\r\n        title={props.title}\r\n        style={{\r\n          background: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.3)), url('${props.imgUrl}')`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\"\r\n        }}\r\n      />\r\n      <CardActions>\r\n        <Tooltip title=\"Delete\" aria-label=\"delete\">\r\n          <DeleteIcon className=\"icon delete\" onClick={handleClickOpenDelete} />\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\" aria-label=\"edit\">\r\n          <EditIcon className=\"icon edit\" onClick={handleClickOpenEdit} />\r\n        </Tooltip>\r\n      </CardActions>\r\n      <CardContent className=\"container\">\r\n        <DeleteCoffeeDialog\r\n          isOpen={openDelete}\r\n          handleClose={handleCloseDelete}\r\n          coffeeTitle={props.title}\r\n          coffeeId={props.id}\r\n          deleteCard={deleteCard}\r\n        />\r\n        <EditCoffeeDialog\r\n          isOpen={openEdit}\r\n          handleClose={handleCloseEdit}\r\n          coffeeTitle={props.title}\r\n          coffeeImg={props.imgUrl}\r\n          coffeePrice={props.price}\r\n          editCard={editCard}\r\n          coffeeId={props.id}\r\n        />\r\n        <Typography className=\"title\" color=\"textSecondary\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className=\"price\" variant=\"body2\" component=\"p\">\r\n          {formatPrice(props.price)}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CoffeeCard;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\r\n\r\nconst AddCoffeeDialog = props => {\r\n  const inputProps = {\r\n    min: 0.1,\r\n    step: 0.1\r\n  };\r\n\r\n  const [newCoffeeImg, setNewCoffeeImg] = React.useState(\"\");\r\n  const [newCoffeeTitle, setNewCoffeeTitle] = React.useState(\"\");\r\n  const [newCoffeePrice, setNewCoffeePrice] = React.useState(0);\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const newCoffee = {\r\n    imgUrl: newCoffeeImg,\r\n    title: newCoffeeTitle,\r\n    price: newCoffeePrice\r\n  };\r\n\r\n  const setCoffeeImg = url => {\r\n    setNewCoffeeImg(url);\r\n  };\r\n\r\n  const setCoffeeTitle = title => {\r\n    setNewCoffeeTitle(title);\r\n  };\r\n\r\n  const setCoffeePrice = price => {\r\n    setNewCoffeePrice(price);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isCoffeeFormValid([newCoffeeImg, newCoffeeTitle, newCoffeePrice])) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }, [newCoffeeImg, newCoffeeTitle, newCoffeePrice]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add new coffee</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please fill all the fields to add new coffee\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"Image Url\"\r\n          type=\"text\"\r\n          name=\"imgUrl\"\r\n          fullWidth\r\n          onChange={e => setCoffeeImg(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          fullWidth\r\n          onChange={e => setCoffeeTitle(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Price\"\r\n          type=\"number\"\r\n          name=\"price\"\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\r\n          }}\r\n          inputProps={inputProps}\r\n          fullWidth\r\n          onChange={e => setCoffeePrice(Number(e.target.value))}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} variant=\"contained\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => props.addNewCoffee(newCoffee)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!isValid}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddCoffeeDialog;\r\n","import React from \"react\";\r\nimport \"./loading-spinner.scss\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"app-loading\">\r\n      <svg className=\"spinner\" viewBox=\"25 25 50 50\">\r\n        <circle\r\n          className=\"path\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"15\"\r\n          fill=\"none\"\r\n          strokeWidth=\"2\"\r\n          strokeMiterlimit=\"10\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport \"./billboard.scss\";\r\nimport CoffeeCard from \"../coffee-card/coffee-card\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { connect } from \"react-redux\";\r\nimport { postCoffee } from \"../../redux/actions\";\r\nimport AddCoffeeDialog from \"../add-coffee-dialog/add-coffee-dialog\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\n\r\nconst mapStateToProps = state => {\r\n  const coffee = state.coffee;\r\n  return { coffee };\r\n};\r\n\r\nconst Billboard = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const addNewCoffee = newCoffee => {\r\n    dispatch(postCoffee(newCoffee));\r\n    handleClose();\r\n  };\r\n\r\n  const deleteCard = index => {\r\n    console.log(\"deleted\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"billboard\">\r\n      {props.coffee.isLoading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <div>\r\n          <Grid container>\r\n            {props.coffee.coffeeList.map((c, index) => {\r\n              return (\r\n                <Grid item md={3} sm={4} xs={6} key={index}>\r\n                  <CoffeeCard\r\n                    imgUrl={c.imgUrl}\r\n                    title={c.title}\r\n                    price={c.price}\r\n                    id={c.id}\r\n                    deleteCard={e => deleteCard(index)}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Tooltip title=\"Add new coffee\" aria-label=\"add\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              className=\"add\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n          <AddCoffeeDialog\r\n            isOpen={open}\r\n            handleClose={handleClose}\r\n            addNewCoffee={addNewCoffee}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { postCoffee }\r\n)(Billboard);\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  const coffee = state.coffee;\r\n  return { coffee };\r\n};\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <a href=\"/coffee-billboard\" className=\"logo-container\">\r\n        <span className=\"logo-text\">Coffee House</span>\r\n        <img src=\"./coffee-beans.png\" alt=\"logo\" className=\"logo-img\"></img>\r\n      </a>\r\n      <p className=\"coffee-count\">\r\n        Total amount of coffee: {props.coffee.coffeeList.length}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\nimport './App.scss';\nimport Billboard from './components/billboard/billboard';\nimport Header from './components/header/header';\nimport 'typeface-roboto';\nimport { useDispatch } from 'react-redux';\nimport { fetchCoffeeList } from './redux/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(fetchCoffeeList());\n  \n  return (\n    <div>\n      <Header />\n      <Billboard />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    combineReducers\r\n} from 'redux'\r\n\r\nimport {\r\n    REMOVE_COFFEE,\r\n    REQUEST_COFFEE_LIST,\r\n    RECEIVE_COFFEE_LIST,\r\n    ADD_COFFEE,\r\n    REMOVE_COFFEE_SUCCESS,\r\n    ADD_COFFEE_SUCCESS,\r\n    EDIT_COFFEE_SUCCESS,\r\n    EDIT_COFFEE\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    coffeeList: []\r\n}\r\n\r\nfunction updateCoffeeById(coffeeId, coffee, coffeeList) {\r\n    const coffeeIndex = coffeeList.findIndex(c => c.id === coffeeId);\r\n    coffeeList[coffeeIndex] = coffee;\r\n    return coffeeList;\r\n}\r\n\r\nexport function coffeeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case EDIT_COFFEE:\r\n        case REMOVE_COFFEE:\r\n        case ADD_COFFEE:\r\n        case REQUEST_COFFEE_LIST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case RECEIVE_COFFEE_LIST:\r\n            return {\r\n                ...state,\r\n                coffeeList: action.coffeeList,\r\n                isLoading: false\r\n            };\r\n        case REMOVE_COFFEE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                coffeeList: state.coffeeList.filter(c => c.id !== action.coffeeId),\r\n                isLoading: false\r\n            };\r\n        case ADD_COFFEE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                coffeeList: state.coffeeList.concat(action.coffee),\r\n                isLoading: false\r\n            };\r\n        case EDIT_COFFEE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                coffeeList: updateCoffeeById(action.coffeeId,\r\n                        action.coffee, state.coffeeList),\r\n                isLoading: false\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    coffee: coffeeReducer\r\n})","import {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose\r\n} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}