{"version":3,"sources":["components/delete-coffee-dialog/delete-coffee-dialog.jsx","services/coffee-form-validation.js","components/edit-coffee-dialog/edit-coffee-dialog.jsx","config/config.js","redux/actions.js","components/loading-spinner/loading-spinner.jsx","components/coffee-card/coffee-card.jsx","components/add-coffee-dialog/add-coffee-dialog.jsx","components/billboard/billboard.jsx","components/header/header.jsx","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["DeleteCoffeeDialog","props","Dialog","open","isOpen","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","coffeeTitle","DialogActions","Button","onClick","color","variant","e","deleteCard","coffeeId","autoFocus","isCoffeeFormValid","values","length","isCoffeePriceValid","price","toString","priceRegex","RegExp","test","EditCoffeeDialog","React","useState","coffeeImg","url","seturl","title","setTitle","coffeePrice","setPrice","isValid","setIsValid","editedCoffee","useEffect","TextField","margin","label","type","fullWidth","value","onChange","target","InputProps","endAdornment","InputAdornment","position","inputProps","step","Number","editCard","disabled","config","getCoffeeById","sucessCallback","dispatch","requestCoffeeById","fetch","method","headers","then","response","json","coffee","addCoffeeSuccess","coffeePayload","postCoffee","addCoffee","body","JSON","stringify","newCoffeeId","editCoffeeSuccess","LoadingSpinner","className","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","CoffeeCard","openEdit","setOpenEdit","openDelete","setOpenDelete","useDispatch","handleCloseEdit","handleCloseDelete","cardMedia","CardMedia","image","style","background","backgroundSize","backgroundPosition","isLoading","Card","CardActions","Tooltip","aria-label","CardContent","removeCoffee","removeCoffeeSuccess","editCoffee","Typography","component","toFixed","AddCoffeeDialog","newCoffeeImg","setNewCoffeeImg","newCoffeeTitle","setNewCoffeeTitle","newCoffeePrice","setNewCoffeePrice","newCoffee","name","required","min","addNewCoffee","connect","state","setOpen","Grid","container","coffeeList","map","c","index","item","md","sm","xs","key","console","log","Fab","href","src","alt","App","Boolean","window","location","hostname","match","initialState","updateCoffeeById","coffeeIndex","findIndex","combineReducers","action","filter","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3afc4672.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst DeleteCoffeeDialog = props => {\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete coffee</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure want to delete {props.coffeeTitle} from your billboard?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\" variant=\"contained\">\n            Cancel\n          </Button>\n          <Button onClick={e => props.deleteCard(props.coffeeId)} color=\"primary\" variant=\"contained\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DeleteCoffeeDialog;\n","export const isCoffeeFormValid = (values) => {\n    if (values[0].length > 0 && values[1].length > 0 && isCoffeePriceValid(values[2])) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst isCoffeePriceValid = (price) => {\n    price = price.toString();\n    const priceRegex = new RegExp(/^([\\d]{1,2}){1}([.]{1}[\\d]{1,2}){0,1}$/);\n    return price !== '0' && priceRegex.test(price);\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\n\nconst EditCoffeeDialog = props => {\n  const inputProps = {\n    step: 0.1\n  };\n\n  const [url, seturl] = React.useState(props.coffeeImg);\n  const [title, setTitle] = React.useState(props.coffeeTitle);\n  const [price, setPrice] = React.useState(props.coffeePrice);\n  const [isValid, setIsValid] = React.useState(false);\n\n  const editedCoffee = {\n    url,\n    title,\n    price\n  };\n\n  React.useEffect(() => {\n    if (isCoffeeFormValid([url, title, price])) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [url, title, price]);\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Edit coffee</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Image Url\"\n          type=\"text\"\n          fullWidth\n          value={url}\n          onChange={e => seturl(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Title\"\n          type=\"text\"\n          fullWidth\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Price\"\n          type=\"number\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\n          }}\n          inputProps={inputProps}\n          fullWidth\n          value={price}\n          onChange={e => setPrice(Number(e.target.value))}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\" variant=\"contained\">\n          Cancel\n        </Button>\n        <Button\n          onClick={e => props.editCard(editedCoffee, props.coffeeId)}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={!isValid}\n        >\n          Edit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditCoffeeDialog;\n","export const config = {\n    apiUrl: 'https://arcane-scrubland-42634.herokuapp.com'\n}","import { config } from '../config/config';\n\nexport const REQUEST_COFFEE_LIST = 'REQUEST_COFFEE_LIST';\nexport const REQUEST_COFFEE_LIST_SUCCESS = 'REQUEST_COFFEE_LIST_SUCCESS'\nexport const ADD_COFFEE = 'ADD_COFFEE';\nexport const ADD_COFFEE_SUCCESS = 'ADD_COFFEE_SUCCESS';\nexport const REMOVE_COFFEE = 'REMOVE_COFFEE';\nexport const REMOVE_COFFEE_SUCCESS = 'REMOVE_COFFEE_SUCCESS';\nexport const EDIT_COFFEE = 'EDIT_COFFEE';\nexport const EDIT_COFFEE_SUCCESS = 'EDIT COFFEE SUCCESS';\nexport const REQUEST_COFFEE_BY_ID = 'REQUEST_COFFEE_BY_ID';\n\nexport function getCoffeeById(coffeeId, sucessCallback) {\n    return function (dispatch) {\n        dispatch(requestCoffeeById(coffeeId))\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n            .then(response => response.json())\n            .then(coffee => {\n                dispatch(sucessCallback(coffee));\n            })\n    }\n}\n\nexport function requestCoffeeById(coffeeId) {\n    return {\n        type: REQUEST_COFFEE_BY_ID,\n        coffeeId\n    }\n}\n\nexport function addCoffee(coffeePayload) {\n    return {\n        type: ADD_COFFEE,\n        coffee: coffeePayload\n    }\n}\n\nexport function addCoffeeSuccess(coffeePayload) {\n    return {\n        type: ADD_COFFEE_SUCCESS,\n        coffee: coffeePayload\n    }\n}\n\nexport function postCoffee(coffeePayload) {\n    return function (dispatch) {\n        dispatch(addCoffee())\n\n        return fetch(`${config.apiUrl}/coffee`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    url: coffeePayload.url,\n                    title: coffeePayload.title,\n                    price: coffeePayload.price\n                })\n            })\n            .then(response => response.json())\n            .then(newCoffeeId => {\n                dispatch(getCoffeeById(newCoffeeId, addCoffeeSuccess));\n            })\n    }\n}\n\nexport function removeCoffee(coffeeId) {\n    return {\n        type: REMOVE_COFFEE,\n        coffeeId\n    }\n}\n\nexport function removeCoffeeSuccess(coffeeId) {\n    return {\n        type: REMOVE_COFFEE_SUCCESS,\n        coffeeId\n    }\n}\n\nexport function deleteCoffee(coffeeId) {\n    return function (dispatch) {\n        dispatch(removeCoffee(coffeeId))\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => {\n                dispatch(removeCoffeeSuccess(coffeeId))\n            })\n    }\n}\n\nexport function editCoffee(coffeeId) {\n    return {\n        type: EDIT_COFFEE,\n        coffeeId\n    }\n}\n\nexport function editCoffeeSuccess(editedCoffee) {\n    return {\n        type: EDIT_COFFEE_SUCCESS,\n        coffee: editedCoffee\n    }\n}\n\nexport function putCoffee(editedCoffee, coffeeId) {\n    return function (dispatch) {\n        dispatch(editCoffee(coffeeId))\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    url: editedCoffee.url,\n                    title: editedCoffee.title,\n                    price: editedCoffee.price\n                })\n            })\n            .then(response => response.json())\n            .then(json => {\n                dispatch(getCoffeeById(coffeeId, editCoffeeSuccess))\n            })\n    }\n}\n\n\n\nexport function requestCoffeeList() {\n    return {\n        type: REQUEST_COFFEE_LIST\n    }\n}\n\nexport function requestCoffeeListSuccess(json) {\n    return {\n        type: REQUEST_COFFEE_LIST_SUCCESS,\n        coffeeList: json\n    }\n}\n\nexport function fetchCoffeeList() {\n    return function (dispatch) {\n        dispatch(requestCoffeeList())\n\n        return fetch(`${config.apiUrl}/coffee`)\n            .then(response => response.json())\n            .then(coffeeList => {\n                dispatch(requestCoffeeListSuccess(coffeeList))\n            })\n    }\n}","import React from \"react\";\nimport \"./loading-spinner.scss\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"app-loading\">\n      <svg className=\"spinner\" viewBox=\"25 25 50 50\">\n        <circle\n          className=\"path\"\n          cx=\"50\"\n          cy=\"50\"\n          r=\"15\"\n          fill=\"none\"\n          strokeWidth=\"2\"\n          strokeMiterlimit=\"10\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport \"./coffee-card.scss\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteCoffeeDialog from \"../delete-coffee-dialog/delete-coffee-dialog\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport EditCoffeeDialog from \"../edit-coffee-dialog/edit-coffee-dialog\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteCoffee, putCoffee } from \"../../redux/actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\n\nconst CoffeeCard = props => {\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpenEdit = () => {\n    setOpenEdit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n  };\n\n  const editCard = (coffee, id) => {\n    dispatch(putCoffee(coffee, id));\n    handleCloseEdit();\n  };\n\n  const handleClickOpenDelete = () => {\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  };\n\n  const deleteCard = id => {\n    dispatch(deleteCoffee(id));\n    handleCloseDelete();\n  };\n\n  const formatPrice = price => {\n    let formattedPrice = `${price.toFixed(2)}€`;\n    return formattedPrice;\n  };\n\n  const cardMedia = (\n    <CardMedia\n      className=\"coffee-img\"\n      image={props.url}\n      title={props.title}\n      style={{\n        background: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.3)) url('${props.url}')`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\"\n      }}\n    />\n  );\n\n  return (\n    <div>\n      {props.isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <Card className=\"coffee-card\">\n          {cardMedia}\n          <CardActions>\n            <Tooltip title=\"Delete\" aria-label=\"delete\">\n              <DeleteIcon\n                className=\"icon delete\"\n                onClick={handleClickOpenDelete}\n              />\n            </Tooltip>\n            <Tooltip title=\"Edit\" aria-label=\"edit\">\n              <EditIcon className=\"icon edit\" onClick={handleClickOpenEdit} />\n            </Tooltip>\n          </CardActions>\n          <CardContent className=\"container\">\n            <DeleteCoffeeDialog\n              isOpen={openDelete}\n              handleClose={handleCloseDelete}\n              coffeeTitle={props.title}\n              coffeeId={props.id}\n              deleteCard={deleteCard}\n            />\n            <EditCoffeeDialog\n              isOpen={openEdit}\n              handleClose={handleCloseEdit}\n              coffeeTitle={props.title}\n              coffeeImg={props.url}\n              coffeePrice={props.price}\n              editCard={editCard}\n              coffeeId={props.id}\n            />\n            <Typography className=\"title\" color=\"textSecondary\">\n              {props.title}\n            </Typography>\n            <Typography className=\"price\" variant=\"body2\" component=\"p\">\n              {formatPrice(props.price)}\n            </Typography>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default CoffeeCard;\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\r\n\r\nconst AddCoffeeDialog = props => {\r\n  const inputProps = {\r\n    min: 0.1,\r\n    step: 0.1\r\n  };\r\n\r\n  const [newCoffeeImg, setNewCoffeeImg] = React.useState(\"\");\r\n  const [newCoffeeTitle, setNewCoffeeTitle] = React.useState(\"\");\r\n  const [newCoffeePrice, setNewCoffeePrice] = React.useState(0);\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const newCoffee = {\r\n    url: newCoffeeImg,\r\n    title: newCoffeeTitle,\r\n    price: newCoffeePrice\r\n  };\r\n\r\n  const setCoffeeImg = url => {\r\n    setNewCoffeeImg(url);\r\n  };\r\n\r\n  const setCoffeeTitle = title => {\r\n    setNewCoffeeTitle(title);\r\n  };\r\n\r\n  const setCoffeePrice = price => {\r\n    setNewCoffeePrice(price);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isCoffeeFormValid([newCoffeeImg, newCoffeeTitle, newCoffeePrice])) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }, [newCoffeeImg, newCoffeeTitle, newCoffeePrice]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add new coffee</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please fill all the fields to add new coffee\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"Image Url\"\r\n          type=\"text\"\r\n          name=\"url\"\r\n          fullWidth\r\n          onChange={e => setCoffeeImg(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          fullWidth\r\n          onChange={e => setCoffeeTitle(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Price\"\r\n          type=\"number\"\r\n          name=\"price\"\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\r\n          }}\r\n          inputProps={inputProps}\r\n          fullWidth\r\n          onChange={e => setCoffeePrice(Number(e.target.value))}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} variant=\"contained\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => props.addNewCoffee(newCoffee)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!isValid}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddCoffeeDialog;\r\n","import React from \"react\";\nimport \"./billboard.scss\";\nimport CoffeeCard from \"../coffee-card/coffee-card\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { connect } from \"react-redux\";\nimport { postCoffee } from \"../../redux/actions\";\nimport AddCoffeeDialog from \"../add-coffee-dialog/add-coffee-dialog\";\nimport { useDispatch } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\n\nconst mapStateToProps = state => {\n  const coffee = state.coffee;\n  return { coffee };\n};\n\nconst Billboard = props => {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addNewCoffee = newCoffee => {\n    dispatch(postCoffee(newCoffee));\n    handleClose();\n  };\n\n  const deleteCard = index => {\n    console.log(\"deleted\");\n  };\n\n  return (\n    <div className=\"billboard\">\n      {props.coffee.isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <div>\n          <Grid container>\n            {props.coffee.coffeeList.map((c, index) => {\n              return (\n                <Grid item md={3} sm={4} xs={6} key={index}>\n                  <CoffeeCard\n                    url={c.url}\n                    title={c.title}\n                    price={c.price}\n                    id={c.id}\n                    isLoading={c.isLoading}\n                    deleteCard={e => deleteCard(index)}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Tooltip title=\"Add new coffee\" aria-label=\"add\">\n            <Fab\n              color=\"primary\"\n              aria-label=\"add\"\n              className=\"add\"\n              onClick={handleClickOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <AddCoffeeDialog\n            isOpen={open}\n            handleClose={handleClose}\n            addNewCoffee={addNewCoffee}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  { postCoffee }\n)(Billboard);\n","import React from \"react\";\nimport \"./header.scss\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  const coffee = state.coffee;\n  return { coffee };\n};\n\nconst Header = props => {\n  return (\n    <div className=\"header\">\n      <a href=\"/coffee-billboard\" className=\"logo-container\">\n        <span className=\"logo-text\">Coffee House</span>\n        <img src=\"./coffee-beans.png\" alt=\"logo\" className=\"logo-img\"></img>\n      </a>\n      <p className=\"coffee-count\">\n        Total amount of coffee: {props.coffee.coffeeList.length}\n      </p>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport './App.scss';\nimport Billboard from './components/billboard/billboard';\nimport Header from './components/header/header';\nimport 'typeface-roboto';\nimport { useDispatch } from 'react-redux';\nimport { fetchCoffeeList } from './redux/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(fetchCoffeeList());\n  \n  return (\n    <div>\n      <Header />\n      <Billboard />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    combineReducers\n} from 'redux'\n\nimport {\n    REQUEST_COFFEE_LIST_SUCCESS,\n    ADD_COFFEE_SUCCESS,\n    REMOVE_COFFEE,\n    REMOVE_COFFEE_SUCCESS,\n    EDIT_COFFEE_SUCCESS,\n    EDIT_COFFEE,\n} from './actions';\n\nconst initialState = {\n    coffeeList: []\n}\n\nfunction updateCoffeeById(coffee, coffeeList) {\n    const coffeeIndex = coffeeList.findIndex(c => c.id === coffee.id);\n    coffeeList[coffeeIndex] = {...coffee, isLoading: false};\n    return coffeeList;\n}\n\nexport function coffeeReducer(state = initialState, action) {\n    switch (action.type) {\n        case REMOVE_COFFEE:\n        case EDIT_COFFEE:\n            return {\n                coffeeList: state.coffeeList.map((coffee) => ({\n                    ...coffee,\n                    isLoading: coffee.id === action.coffeeId\n                }))\n            }\n        case REQUEST_COFFEE_LIST_SUCCESS:\n            return {\n                coffeeList: action.coffeeList\n            };\n        case REMOVE_COFFEE_SUCCESS:\n            return {\n                coffeeList: state.coffeeList.filter(c => c.id !== action.coffeeId),\n            };\n        case ADD_COFFEE_SUCCESS:\n            return {\n                coffeeList: state.coffeeList.concat(action.coffee),\n            };\n        case EDIT_COFFEE_SUCCESS:\n            return {\n                coffeeList: updateCoffeeById(action.coffee, state.coffeeList),\n            }\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    coffee: coffeeReducer\n})","import {\n    createStore,\n    applyMiddleware,\n    compose\n} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}