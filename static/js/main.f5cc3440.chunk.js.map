{"version":3,"sources":["components/delete-coffee-dialog/delete-coffee-dialog.jsx","services/coffee-form-validation.js","components/edit-coffee-dialog/edit-coffee-dialog.jsx","config/config.js","redux/actions.js","components/coffee-card/coffee-card.jsx","components/add-coffee-dialog/add-coffee-dialog.jsx","components/loading-spinner/loading-spinner.jsx","components/billboard/billboard.jsx","components/header/header.jsx","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["DeleteCoffeeDialog","props","Dialog","open","isOpen","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","coffeeTitle","DialogActions","Button","onClick","color","e","deleteCard","coffeeId","autoFocus","isCoffeeFormValid","values","length","EditCoffeeDialog","React","useState","coffeeImg","url","seturl","title","setTitle","coffeePrice","price","setPrice","isValid","setIsValid","editedCoffee","useEffect","TextField","margin","label","type","fullWidth","value","onChange","target","InputProps","endAdornment","InputAdornment","position","inputProps","step","Number","variant","editCard","disabled","config","getCoffeeById","sucessCallback","dispatch","fetch","method","headers","then","response","json","coffee","addCoffeeSuccess","coffeePayload","postCoffee","addCoffee","body","JSON","stringify","newCoffeeId","editCoffeeSuccess","CoffeeCard","openEdit","setOpenEdit","openDelete","setOpenDelete","useDispatch","handleCloseEdit","handleCloseDelete","cardMedia","CardMedia","className","image","style","background","backgroundSize","backgroundPosition","Card","CardActions","Tooltip","aria-label","CardContent","removeCoffee","removeCoffeeSuccess","editCoffee","Typography","component","toFixed","AddCoffeeDialog","newCoffeeImg","setNewCoffeeImg","newCoffeeTitle","setNewCoffeeTitle","newCoffeePrice","setNewCoffeePrice","newCoffee","name","required","min","addNewCoffee","LoadingSpinner","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","connect","state","setOpen","isLoading","Grid","container","coffeeList","map","c","index","item","md","sm","xs","key","console","log","Fab","href","src","alt","App","Boolean","window","location","hostname","match","initialState","updateCoffeeById","coffeeIndex","findIndex","combineReducers","action","filter","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5cc3440.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst DeleteCoffeeDialog = props => {\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete coffee</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure want to delete {props.coffeeTitle} from your billboard?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={e => props.deleteCard(props.coffeeId)} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DeleteCoffeeDialog;\n","export const isCoffeeFormValid = (values) => {\n    if (values[0].length > 0 && values[1].length > 0 && values[2] > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\n\nconst EditCoffeeDialog = props => {\n  const inputProps = {\n    step: 0.1\n  };\n\n  const [url, seturl] = React.useState(props.coffeeImg);\n  const [title, setTitle] = React.useState(props.coffeeTitle);\n  const [price, setPrice] = React.useState(props.coffeePrice);\n  const [isValid, setIsValid] = React.useState(false);\n\n  const editedCoffee = {\n    url,\n    title,\n    price\n  };\n\n  React.useEffect(() => {\n    if (isCoffeeFormValid([url, title, price])) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [url, title, price]);\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Edit coffee</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Image Url\"\n          type=\"text\"\n          fullWidth\n          value={url}\n          onChange={e => seturl(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Title\"\n          type=\"text\"\n          fullWidth\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Price\"\n          type=\"number\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\n          }}\n          inputProps={inputProps}\n          fullWidth\n          value={price}\n          onChange={e => setPrice(Number(e.target.value))}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\" variant=\"contained\">\n          Cancel\n        </Button>\n        <Button\n          onClick={e => props.editCard(editedCoffee, props.coffeeId)}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={!isValid}\n        >\n          Edit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditCoffeeDialog;\n","export const config = {\n    apiUrl: 'https://arcane-scrubland-42634.herokuapp.com'\n}","import { config } from '../config/config';\n\nexport const REQUEST_COFFEE_LIST = 'GET_COFFEE_LIST';\nexport const RECEIVE_COFFEE_LIST = 'RECEIVE_COFFEE_LIST'\nexport const ADD_COFFEE = 'ADD_COFFEE';\nexport const ADD_COFFEE_SUCCESS = 'ADD_COFFEE_SUCCESS';\nexport const REMOVE_COFFEE = 'REMOVE_COFFEE';\nexport const REMOVE_COFFEE_SUCCESS = 'REMOVE_COFFEE_SUCCESS';\nexport const EDIT_COFFEE = 'EDIT_COFFEE';\nexport const EDIT_COFFEE_SUCCESS = 'EDIT COFFEE SUCCESS';\nexport const GET_COFFEE_BY_ID = 'GET_COFFEE_BY_ID';\nexport const REQUEST_COFFEE_BY_ID = 'REQUEST_COFFEE_BY_ID';\nexport const REQUEST_COFFEE_BY_ID_SUCCESS = 'REQUEST_COFFEE_BY_ID_SUCCESS';\n\nexport function getCoffeeById(coffeeId, sucessCallback) {\n    return function (dispatch) {\n        dispatch(requestCoffeeById(coffeeId))\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n            .then(response => response.json())\n            .then(coffee => {\n                dispatch(sucessCallback(coffee));\n            })\n    }\n}\n\nexport function requestCoffeeById(coffeeId) {\n    return {\n        type: REQUEST_COFFEE_BY_ID,\n    }\n}\n\nexport function requestCoffeeByIdSuccess(coffee) {\n    return {\n        type: REQUEST_COFFEE_BY_ID_SUCCESS,\n        coffee\n    }\n}\n\n\nexport function addCoffee(coffeePayload) {\n    return {\n        type: ADD_COFFEE,\n        coffee: coffeePayload\n    }\n}\n\nexport function addCoffeeSuccess(coffeePayload) {\n    return {\n        type: ADD_COFFEE_SUCCESS,\n        coffee: coffeePayload\n    }\n}\n\nexport function postCoffee(coffeePayload) {\n    return function (dispatch) {\n        dispatch(addCoffee())\n\n        return fetch(`${config.apiUrl}/coffee`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    url: coffeePayload.url,\n                    title: coffeePayload.title,\n                    price: coffeePayload.price\n                })\n            })\n            .then(response => response.json())\n            .then(newCoffeeId => {\n                dispatch(getCoffeeById(newCoffeeId, addCoffeeSuccess));\n            })\n    }\n}\n\nexport function removeCoffee(coffeeId) {\n    return {\n        type: REMOVE_COFFEE,\n        coffeeId\n    }\n}\n\nexport function removeCoffeeSuccess(coffeeId) {\n    return {\n        type: REMOVE_COFFEE_SUCCESS,\n        coffeeId\n    }\n}\n\nexport function deleteCoffee(coffeeId) {\n    return function (dispatch) {\n        dispatch(removeCoffee())\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => {\n                dispatch(removeCoffeeSuccess(coffeeId))\n            })\n    }\n}\n\nexport function editCoffee(editedCoffee, coffeeId) {\n    return {\n        type: EDIT_COFFEE,\n        coffee: editedCoffee,\n        coffeeId\n    }\n}\n\nexport function editCoffeeSuccess(editedCoffee) {\n    return {\n        type: EDIT_COFFEE_SUCCESS,\n        coffee: editedCoffee\n    }\n}\n\nexport function putCoffee(editedCoffee, coffeeId) {\n    return function (dispatch) {\n        dispatch(editCoffee())\n\n        return fetch(`${config.apiUrl}/coffee/${coffeeId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    url: editedCoffee.url,\n                    title: editedCoffee.title,\n                    price: editedCoffee.price\n                })\n            })\n            .then(response => response.json())\n            .then(json => {\n                dispatch(getCoffeeById(coffeeId, editCoffeeSuccess))\n            })\n    }\n}\n\n\n\nexport function requestCoffeeList() {\n    return {\n        type: REQUEST_COFFEE_LIST\n    }\n}\n\nexport function receiveCoffeeList(json) {\n    return {\n        type: RECEIVE_COFFEE_LIST,\n        coffeeList: json\n    }\n}\n\nexport function fetchCoffeeList() {\n    return function (dispatch) {\n        dispatch(requestCoffeeList())\n\n        return fetch(`${config.apiUrl}/coffee`)\n            .then(response => response.json())\n            .then(coffeeList => {\n                dispatch(receiveCoffeeList(coffeeList))\n            })\n    }\n}","import React from \"react\";\nimport \"./coffee-card.scss\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteCoffeeDialog from \"../delete-coffee-dialog/delete-coffee-dialog\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport EditCoffeeDialog from \"../edit-coffee-dialog/edit-coffee-dialog\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteCoffee, putCoffee } from \"../../redux/actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst CoffeeCard = props => {\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpenEdit = () => {\n    setOpenEdit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n  };\n\n  const editCard = (coffee, id) => {\n    dispatch(putCoffee(coffee, id));\n    handleCloseEdit();\n  };\n\n  const handleClickOpenDelete = () => {\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  };\n\n  const deleteCard = id => {\n    dispatch(deleteCoffee(id));\n    handleCloseDelete();\n  };\n\n  const formatPrice = price => {\n    let formattedPrice = `${price.toFixed(2)}€`;\n    return formattedPrice;\n  };\n  \n  const cardMedia = <CardMedia\n    className=\"coffee-img\"\n    image={props.url}\n    title={props.title}\n    style={{\n      background: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.3)) url('${props.url}')`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    }}\n  />\n\n  return (\n    <Card className=\"coffee-card\">\n      {cardMedia}\n      <CardActions>\n        <Tooltip title=\"Delete\" aria-label=\"delete\">\n          <DeleteIcon className=\"icon delete\" onClick={handleClickOpenDelete} />\n        </Tooltip>\n        <Tooltip title=\"Edit\" aria-label=\"edit\">\n          <EditIcon className=\"icon edit\" onClick={handleClickOpenEdit} />\n        </Tooltip>\n      </CardActions>\n      <CardContent className=\"container\">\n        <DeleteCoffeeDialog\n          isOpen={openDelete}\n          handleClose={handleCloseDelete}\n          coffeeTitle={props.title}\n          coffeeId={props.id}\n          deleteCard={deleteCard}\n        />\n        <EditCoffeeDialog\n          isOpen={openEdit}\n          handleClose={handleCloseEdit}\n          coffeeTitle={props.title}\n          coffeeImg={props.url}\n          coffeePrice={props.price}\n          editCard={editCard}\n          coffeeId={props.id}\n        />\n        <Typography className=\"title\" color=\"textSecondary\">\n          {props.title}\n        </Typography>\n        <Typography className=\"price\" variant=\"body2\" component=\"p\">\n          {formatPrice(props.price)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CoffeeCard;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport { isCoffeeFormValid } from \"../../services/coffee-form-validation\";\n\nconst AddCoffeeDialog = props => {\n  const inputProps = {\n    min: 0.1,\n    step: 0.1\n  };\n\n  const [newCoffeeImg, setNewCoffeeImg] = React.useState(\"\");\n  const [newCoffeeTitle, setNewCoffeeTitle] = React.useState(\"\");\n  const [newCoffeePrice, setNewCoffeePrice] = React.useState(0);\n  const [isValid, setIsValid] = React.useState(false);\n\n  const newCoffee = {\n    url: newCoffeeImg,\n    title: newCoffeeTitle,\n    price: newCoffeePrice\n  };\n\n  const setCoffeeImg = url => {\n    setNewCoffeeImg(url);\n  };\n\n  const setCoffeeTitle = title => {\n    setNewCoffeeTitle(title);\n  };\n\n  const setCoffeePrice = price => {\n    setNewCoffeePrice(price);\n  };\n\n  React.useEffect(() => {\n    if (isCoffeeFormValid([newCoffeeImg, newCoffeeTitle, newCoffeePrice])) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [newCoffeeImg, newCoffeeTitle, newCoffeePrice]);\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Add new coffee</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please fill all the fields to add new coffee\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Image Url\"\n          type=\"text\"\n          name=\"url\"\n          fullWidth\n          onChange={e => setCoffeeImg(e.target.value)}\n          required\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Title\"\n          type=\"text\"\n          name=\"title\"\n          fullWidth\n          onChange={e => setCoffeeTitle(e.target.value)}\n          required\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Price\"\n          type=\"number\"\n          name=\"price\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\n          }}\n          inputProps={inputProps}\n          fullWidth\n          onChange={e => setCoffeePrice(Number(e.target.value))}\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} variant=\"contained\" color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={e => props.addNewCoffee(newCoffee)}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!isValid}\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddCoffeeDialog;\n","import React from \"react\";\nimport \"./loading-spinner.scss\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"app-loading\">\n      <svg className=\"spinner\" viewBox=\"25 25 50 50\">\n        <circle\n          className=\"path\"\n          cx=\"50\"\n          cy=\"50\"\n          r=\"15\"\n          fill=\"none\"\n          strokeWidth=\"2\"\n          strokeMiterlimit=\"10\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport \"./billboard.scss\";\nimport CoffeeCard from \"../coffee-card/coffee-card\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { connect } from \"react-redux\";\nimport { postCoffee } from \"../../redux/actions\";\nimport AddCoffeeDialog from \"../add-coffee-dialog/add-coffee-dialog\";\nimport { useDispatch } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\n\nconst mapStateToProps = state => {\n  const coffee = state.coffee;\n  return { coffee };\n};\n\nconst Billboard = props => {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addNewCoffee = newCoffee => {\n    dispatch(postCoffee(newCoffee));\n    handleClose();\n  };\n\n  const deleteCard = index => {\n    console.log(\"deleted\");\n  };\n\n  return (\n    <div className=\"billboard\">\n      {props.coffee.isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <div>\n          <Grid container>\n            {props.coffee.coffeeList.map((c, index) => {\n              return (\n                <Grid item md={3} sm={4} xs={6} key={index}>\n                  <CoffeeCard\n                    url={c.url}\n                    title={c.title}\n                    price={c.price}\n                    id={c.id}\n                    deleteCard={e => deleteCard(index)}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Tooltip title=\"Add new coffee\" aria-label=\"add\">\n            <Fab\n              color=\"primary\"\n              aria-label=\"add\"\n              className=\"add\"\n              onClick={handleClickOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <AddCoffeeDialog\n            isOpen={open}\n            handleClose={handleClose}\n            addNewCoffee={addNewCoffee}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  { postCoffee }\n)(Billboard);\n","import React from \"react\";\nimport \"./header.scss\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  const coffee = state.coffee;\n  return { coffee };\n};\n\nconst Header = props => {\n  return (\n    <div className=\"header\">\n      <a href=\"/coffee-billboard\" className=\"logo-container\">\n        <span className=\"logo-text\">Coffee House</span>\n        <img src=\"./coffee-beans.png\" alt=\"logo\" className=\"logo-img\"></img>\n      </a>\n      <p className=\"coffee-count\">\n        Total amount of coffee: {props.coffee.coffeeList.length}\n      </p>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport './App.scss';\nimport Billboard from './components/billboard/billboard';\nimport Header from './components/header/header';\nimport 'typeface-roboto';\nimport { useDispatch } from 'react-redux';\nimport { fetchCoffeeList } from './redux/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(fetchCoffeeList());\n  \n  return (\n    <div>\n      <Header />\n      <Billboard />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    combineReducers\n} from 'redux'\n\nimport {\n    REQUEST_COFFEE_LIST,\n    RECEIVE_COFFEE_LIST,\n    ADD_COFFEE,\n    ADD_COFFEE_SUCCESS,\n    REMOVE_COFFEE,\n    REMOVE_COFFEE_SUCCESS,\n    EDIT_COFFEE_SUCCESS,\n    EDIT_COFFEE,\n    REQUEST_COFFEE_BY_ID,\n    REQUEST_COFFEE_BY_ID_SUCCESS\n} from './actions';\n\nconst initialState = {\n    isLoading: false,\n    coffeeList: []\n}\n\nfunction updateCoffeeById(coffee, coffeeList) {\n    const coffeeIndex = coffeeList.findIndex(c => c.id === coffee.id);\n    coffeeList[coffeeIndex] = coffee;\n    return coffeeList;\n}\n\nexport function coffeeReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST_COFFEE_BY_ID:\n        case EDIT_COFFEE:\n        case REMOVE_COFFEE:\n        case ADD_COFFEE:\n        case REQUEST_COFFEE_LIST:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case RECEIVE_COFFEE_LIST:\n            return {\n                ...state,\n                coffeeList: action.coffeeList,\n                isLoading: false\n            };\n        case REMOVE_COFFEE_SUCCESS:\n            return {\n                ...state,\n                coffeeList: state.coffeeList.filter(c => c.id !== action.coffeeId),\n                isLoading: false\n            };\n        case ADD_COFFEE_SUCCESS:\n            return {\n                ...state,\n                coffeeList: state.coffeeList.concat(action.coffee),\n                isLoading: false\n            };\n        case EDIT_COFFEE_SUCCESS:\n            return {\n                ...state,\n                coffeeList: updateCoffeeById(action.coffee, state.coffeeList),\n                isLoading: false\n            }\n        case REQUEST_COFFEE_BY_ID_SUCCESS: \n            return {\n                ...state,\n                coffeeList: state.coffeeList.concat(action.coffee),\n                isLoading: false\n            }\n            default:\n                return state;\n    }\n}\n\nexport default combineReducers({\n    coffee: coffeeReducer\n})","import {\n    createStore,\n    applyMiddleware,\n    compose\n} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}